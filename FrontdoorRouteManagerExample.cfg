*** TEMPLATE EXAMPLE FOR ROUTE DEFINITIONS TO FRONTDOOR ROUTE MANAGER UTILITY ***

front-door-name: VALID-FRONTDOOR-NAME
front-door-group: VALID-FRONTDOOR-RESOURCE-GROUP

engine-asociations:                        (OPTIONAL, this block config is optional. List of engines with list of rules to link)
    - engineName1:                         (OPTIONAL, Engine names MUST exist as valid rules engine)
      - ruleName1                          (OPTIONAL, Rule MUST exist as valid routing rule)
      - ruleName2
    - engineName2:
      - ruleName1
      - ruleName2

routing-rules:                             (OPTIONAL, Ordered List of routing rule names. IF NOT RULES, USE THIS routeing-rules: [])
    - the-rule-name: ~                     (REQUIRED, use ~)
      timeout: NUMBER 0-any                (OPTIONAL, default 120)
      fatal: True | False                  (OPTIONAL, will a failure to create this rule cause exception, default False)
      ruletype: Forward | Redirect | None  (REQUIRED, of None, only the frontend will be created, no rules, backends etc...)
      frontends:                           (REQUIRED, List at least one frontdoor frontend name, not hostname)
        - example-frontend-name: ~         (REQUIRED, frontend name, not hostname)
          create_cname: True | False       (OPTIONAL, ONLY for Azure managed DNS, default False. If True, the leftmost value from host-name is CNAME)
          exists: False                    (REQUIRED, True|False, if True nothing else needed in this config block))
          host-name: foo.bar.com           (REQUIRED if frontend exists is False, valid dns resolvable)
          zone_group: azure-resource-group (REQUIRED if create_cname is True
          certificate-type: FrontDoor      (REQUIRED if enable-ssl is True, values FrontDoor|AzureKeyVault, NO default)
          enable-ssl: True                 (OPTIONAL, enables https certificates, default false, can be set even if fronend exists is True)
          secret-name: mykey               (REQUIRED if certificate-type is AzureKeyVault)
          secret-version: 11112222         (REQUIRED if certificate-type is AzureKeyVault)
          vault-id:                        (REQUIRED if certificate-type is AzureKeyVault, valid keyvault id)
          tls-version: 1.2                 (OPTIONAL, default 1.2, 1.0|1.1|1.2)
          waf-name: existingwaf            (OPTIONAL, valid frontdoor waf name, not resource id, that must exist)
          sticky-sessions: false           (OPTIONAL, session affinity, default false)
          session-ttl: 60                  (OPTIONAL, ttl on session if sticky-sessions is True, default 60)
      patterns:                            (REQUIRED if ruletype not None, List string match patterns to the right of fqdn in url)
        - /FOOBAR 
      disable: False                       (OPTIONAL, disable routing rule)
      backend-pool:                        (REQUIRED unless rule type is None or Redirect)
        my-app-backend-pool:               (REQUIRED, Single backend pool name)
          exists: False                    (REQUIRED True|False, if True nothing else needed in this config block)
          disable: False                   (OPTIONAL True|False, disable pool? doesn't seem possible in portal)
          backends:                        (REQUIRED if POOL exists is False, List of backend endpoints)
            - region1.foobar.com: ~        (REQUIRED, at least one backend must be specified if creatig pool)
            - region2.foobar.com:
              host-header: foo.bar.com     (OPTIONAL, if no host-header defined, Azure creates it the same as hostname)
          http-port: 80                    (OPTIONAL, default 80)
          https-port: 443                  (OPTIONAL, default 443)
          priority: 1                      (OPTIONAL, default 1)
          weight: 50                       (OPTIONAL, default 50)
          probe:                           (REQUIRED, if POOL exists is False)
            name:                          (OPTIONAL, if specified, probe must exist, else probe-pool_name will be created or updated) 
            disable: True                  (OPTIONAL, default False)
            interval: 120                  (OPTIONAL, default 120)
            protocol: Https                (OPTIONAL, default Https)
            path: /                        (OPTIONAL, default /)
          load-balancing:                  (REQUIRED, if POOL exists is False)
            name:                          (OPTIONAL, if specified, lb must exist, else lb-pool_name will be created or updated)
            sample-size: 4                 (OPTIONAL, default 4)
            samples: 2                     (OPTIONAL, default 2)
            latency: 0                     (OPTIONAL, default 0)
      forward-protocol: MatchRequest       (OPTIONAL, valid when ruletype is FORWARD, HttpOnly|HttpsOnly|MatchRequest, default MatchRequest)
      forward-path: /                      (OPTIONAL, valid when ruletype is FORWARD, default none use ~ for none)
      redirect-type: Found                 (OPTIONAL, valid only when ruletype REDIRECT, Moved|PermanentRedirect|Found|TemporaryRedirect, default Found)
      redirect-protocol: MatchRequest      (OPTIONAL, valid when ruletype is REDIRECT, HttpOnly|HttpsOnly|MatchRequest, default Matc|hRequest)
      destination-host: ~                  (OPTIONAL, valid when ruletype is REDIRECT, default to Match incomming host)
      destination-path: ~                  (OPTIONAL, valid when ruletype is REDIRECT, default to Match incomming path)
      protocols:                           (OPTIONAL, List defaults to [Https])
        - Https
    - example-minimal-config-rule: ~
      ruletype: Forward
      frontends:
        - frontend-main: ~
          exists: True
        - frontend-alt: ~
          exists: True
      patterns:
        - /myapp/*
        - /myapp/ 
      backend-pool: (REQUIRED)
        myapp-backend-pool:
          exists: True
    - example-minimal-config-new-frontend-only: ~
      ruletype: None
      create_cname: True
      frontends:
        - foo-test: ~
          exists: False
          host-name: myenv.myzone.mydomain.com
          enable-ssl: False
          tls-version: 1.2
          waf-name: somewaf
          sticky-sessions: false
          session-ttl: 60

engine-rules:                              (OPTIONAL, this entire block is optional. Use engine-rules: [] if needed)
    - engineCFG1: ~                        (OPTIONAL, Ordered List of rule engine configuration block names, 10 maximum)
      rules:                               (REQUIRED, Ordered List of rules for the engine, at least one, 25 maximum)
        - rule1: ~                         (REQUIRED, rule definition, azure requires at least one. we create noop all the time)
          conditions:                      (OPTIONAL, Ordered List of conditions for the engine rule, 10 maximum)
            - condition_1: ~
              type:                        (REQUIRED, QueryString|RequestBody|RequestFilename|RequestFilenameExtension|RequestPath|RequestMethod|RequestProtocol|RequestUri)
              operator:                    (REQUIRED, Any|BeginsWith|Contains|EndsWith|Equal|GeoMatch|GreaterThan|GreaterThanOrEqual|IPMatch|LessThan|LessThanOrEqual)
                                           (NOTE: Add 'Not' as prefix to any of the valid operators to negate the operation)
              match-value:                 (REQUIRED, matching value on the operator)
              transform: Lowercase         (OPTIONAL, Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode, UrlEncode)
          actions:                         (REQUIRED, engine rules require at least one action. However, one gets created automatically 'noop')
            - action_1: ~                  (REQUIRED, Ordered List of actions for the engine rule, at least one required, 5 maximum)
              type:                        (REQUIRED, ForwardRouteOverride|RedirectRouteOverride|RequestHeader|ResponseHeader)
              backend-pool:                (REQUIRED, if type is ForwardRouteOverride. valid poolname MUST exist)
              forward-protocol:            (OPTIONAL, if type is ForwardRouteOverride. HttpOnly|HttpsOnly|MatchRequest, default MatchRequest)
              forward-path:                (OPTIONAL, if type is ForwardRouteOverride, default uses incoming)
              enable-caching:              (OPTIONAL, True|False)
              redirect-type:               (OPTIONAL, if type is RedirectRouteOverride. Found|Moved|PermanentRedirect|TemporaryRedirect. default is Found)
              redirect-protocol:           (OPTIONAL, if type is RedirectRouteOverride. HttpOnly|HttpsOnly|MatchRequest, default MatchRequest)
              destination-host:            (REQUIRED, if type is RedirectRouteOverride. default uses incoming)
              destination-path:            (REQUIRED, if type is RedirectRouteOverride. default used incoming)
              query-string:                (OPTIONAL, if type is RedirectRouteOverride. default is to preserve)
              header-action:               (REQUIRED, if type is RequestHeader|ResponseHeader. Append|Delete|Overwrite)
              header-name:                 (REQUIRED, if type is RequestHeader|ResponseHeader.)
              header-value:                (REQUIRED, if type is RequestHeader|ResponseHeader.)
